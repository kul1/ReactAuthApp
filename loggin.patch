diff --git a/src/components/app.js b/src/components/app.js
index ea64eb3..3a3cf44 100644
--- a/src/components/app.js
+++ b/src/components/app.js
@@ -1,31 +1,34 @@
 import React, { Component } from "react";
 import { BrowserRouter, Switch, Route } from "react-router-dom";
 import axios from "axios";
-import Home from "./Home.js";
-import Dashboard from "./Dashboard.js";
+
+import Home from "./Home";
+import Dashboard from "./Dashboard";
 
 export default class App extends Component {
   constructor() {
     super();
+
     this.state = {
       loggedInStatus: "NOT_LOGGED_IN",
-      user: {},
+      user: {}
     };
 
     this.handleLogin = this.handleLogin.bind(this);
+    this.handleLogout = this.handleLogout.bind(this);
   }
 
   checkLoginStatus() {
     axios
       .get("http://localhost:3001/logged_in", { withCredentials: true })
-      .then((response) => {
+      .then(response => {
         if (
           response.data.logged_in &&
           this.state.loggedInStatus === "NOT_LOGGED_IN"
         ) {
           this.setState({
             loggedInStatus: "LOGGED_IN",
-            user: response.data.user,
+            user: response.data.user
           });
         } else if (
           !response.data.logged_in &
@@ -33,21 +36,33 @@ export default class App extends Component {
         ) {
           this.setState({
             loggedInStatus: "NOT_LOGGED_IN",
-            user: {},
+            user: {}
           });
         }
       })
-      .catch((error) => {
+      .catch(error => {
         console.log("check login error", error);
       });
   }
 
+  componentDidMount() {
+    this.checkLoginStatus();
+  }
+
+  handleLogout() {
+    this.setState({
+      loggedInStatus: "NOT_LOGGED_IN",
+      user: {}
+    });
+  }
+
   handleLogin(data) {
     this.setState({
       loggedInStatus: "LOGGED_IN",
-      user: data.user,
+      user: data.user
     });
   }
+
   render() {
     return (
       <div className="app">
@@ -56,10 +71,11 @@ export default class App extends Component {
             <Route
               exact
               path={"/"}
-              render={(props) => (
+              render={props => (
                 <Home
                   {...props}
                   handleLogin={this.handleLogin}
+                  handleLogout={this.handleLogout}
                   loggedInStatus={this.state.loggedInStatus}
                 />
               )}
@@ -67,7 +83,7 @@ export default class App extends Component {
             <Route
               exact
               path={"/dashboard"}
-              render={(props) => (
+              render={props => (
                 <Dashboard
                   {...props}
                   loggedInStatus={this.state.loggedInStatus}
